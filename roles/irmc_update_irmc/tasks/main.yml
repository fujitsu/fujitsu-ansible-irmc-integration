---
# tasks file for ./roles/irmc_update_irmc

- name: Set default path mapping if 'irmc_firmware_path_mapping' is not defined
  ansible.builtin.set_fact:
    irmc_firmware_path_mapping: "{{ irmc_firmware_path_mapping | default({}) }}"

- name: Turn off the power of the iRMC device
  fujitsu.primergy.irmc_powerstate:
    irmc_url: "{{ inventory_hostname }}"
    irmc_username: "{{ irmc_user }}"
    irmc_password: "{{ irmc_password }}"
    validate_certs: "{{ validate_certificate }}"
    command: "set"
    state: "PowerOff"
  delegate_to: localhost

- name: Check and set selector to "LowFWImage" if destination is "low" or 1
  ansible.builtin.set_fact:
    selector: "LowFWImage"
  when: destination is defined and destination in ["low", "1", 1]

- name: Check and set selector to "HighFWImage" if destination is "high" or 2
  ansible.builtin.set_fact:
    selector: "HighFWImage"
  when: destination is defined and destination in ["high", "2", 2]

- name: Ensure selector is defined
  ansible.builtin.assert:
    that:
      - selector is defined
    fail_msg: "Invalid 'destination' parameter value. Please specify 'low', 'high', 1, or 2 to proceed with iRMC firmware update."

- name: Get the facts of iRMC device (before update)
  fujitsu.primergy.irmc_facts:
    irmc_url: "{{ inventory_hostname }}"
    irmc_username: "{{ irmc_user }}"
    irmc_password: "{{ irmc_password }}"
    validate_certs: "{{ validate_certificate }}"
    command: "get"
  delegate_to: localhost
  register: get_facts_result

- name: Get iRMC version (before update)
  ansible.builtin.set_fact:
    version_before: >-
      Running={{ get_facts_result.facts.irmc.fw_running }}
      Firmware={{ get_facts_result.facts.irmc.fw_version }}
      SDRR={{ get_facts_result.facts.irmc.sdrr_version }}

- name: Set "model_name" from the facts
  ansible.builtin.set_fact:
    model_name: "{{ get_facts_result.facts.system.model | replace(' ', '_') }}"

- name: Set firmware path based on model_name
  ansible.builtin.set_fact:
    irmc_firmware_path: "{{ irmc_firmware_path_mapping[model_name] }}"
  when: model_name in irmc_firmware_path_mapping

- name: Ensure firmware path is defined
  ansible.builtin.assert:
    that:
      - irmc_firmware_path is defined
    fail_msg: "Firmware path is not defined for model '{{ model_name }}'. Aborting irmc update."

- name: Show update processing start
  ansible.builtin.debug:
    msg: >-
      Firmware path is correctly defined for model '{{ model_name }}'.
      Proceeding with iRMC firmware update with '{{ irmc_firmware_path }}'
      to destination '{{ selector }}'.

- name: Convert the unit of timeout
  ansible.builtin.set_fact:
    # 単位を秒から分に変換（切り上げ）
    timeout_minutes: "{{ ((timeout | int) + 59) // 60 }}"
  when: timeout is defined

- name: Update iRMC firmware
  fujitsu.primergy.irmc_fwbios_update:
    irmc_url: "{{ inventory_hostname }}"
    irmc_username: "{{ irmc_user }}"
    irmc_password: "{{ irmc_password }}"
    validate_certs: "{{ validate_certificate }}"
    command: "update"
    update_type: "irmc"
    update_source: "{{ (tftp_server is defined) | ternary('tftp', 'file') }}"
    server_name: "{{ tftp_server | default(omit) }}"
    file_name: "{{ irmc_firmware_path }}"
    timeout: "{{ timeout_minutes | default(omit) }}"
    irmc_flash_selector: "{{ selector }}"
    irmc_boot_selector: "{{ selector }}"
  delegate_to: localhost

- name: Get the facts of iRMC device (after update)
  fujitsu.primergy.irmc_facts:
    irmc_url: "{{ inventory_hostname }}"
    irmc_username: "{{ irmc_user }}"
    irmc_password: "{{ irmc_password }}"
    validate_certs: "{{ validate_certificate }}"
    command: "get"
  delegate_to: localhost
  register: get_facts_result

- name: Get iRMC version (after update)
  ansible.builtin.set_fact:
    version_after: >-
      Running={{ get_facts_result.facts.irmc.fw_running }}
      Firmware={{ get_facts_result.facts.irmc.fw_version }}
      SDRR={{ get_facts_result.facts.irmc.sdrr_version }}

- name: Show irmc update result
  ansible.builtin.debug:
    msg:
      - "Before: {{ version_before }}"
      - "After:  {{ version_after }}"
