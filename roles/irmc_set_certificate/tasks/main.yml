---
# tasks file for ./roles/irmc_set_certificate
- name: Convert SSL private key generated by OpenSSL from ver.3.x to ver.1.x
  ansible.builtin.replace:
    path: "{{ ssl_private_key_path }}"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  loop:
    - { regexp: "BEGIN PRIVATE KEY", replace: "BEGIN RSA PRIVATE KEY" }
    - { regexp: "END PRIVATE KEY", replace: "END RSA PRIVATE KEY" }

- name: Set iRMC certificates
  fujitsu.primergy.irmc_certificate:
    irmc_url: "{{ inventory_hostname }}"
    irmc_username: "{{ irmc_user }}"
    irmc_password: "{{ irmc_password }}"
    validate_certs: "{{ validate_certificate }}"
    command: "set"
    private_key_path: "{{ ssl_private_key_path }}"
    ssl_cert_path: "{{ ssl_cert_path }}"
    ssl_ca_cert_path: "{{ ssl_ca_cert_path }}"
  delegate_to: localhost
  register: set_result

- name: Reboot iRMC
  ansible.builtin.uri:
    url: "https://{{ inventory_hostname }}/rest/v1/Oem/iRMC/Reset"
    method: POST
    url_username: "{{ irmc_user }}"
    url_password: "{{ irmc_password }}"
    validate_certs: "{{ validate_certificate }}"
    headers:
      Accept: application/json
      Content type: application/json
    status_code: 202
    force_basic_auth: true

# 再起動が始まるまでにヘルスチェックを行うと200が返ってきて終了してしまうのでしばらく待つ
- name: Pause until start of iRMC reboot
  ansible.builtin.pause:
    seconds: 30

- name: Health check until end of iRMC reboot
  block:
    - name: Define wait parameters
      ansible.builtin.set_fact:
        timeout: "{{ sec_until_timeout | default(600) }}"   # 最大待ち時間（秒）
        delay: 15                                           # 各リトライ間の待機時間（秒）

    - name: Define wait parameters
      ansible.builtin.set_fact:
        retries: "{{ timeout // delay }}"  # 最大リトライ回数を計算

    - name: Health check to iRMC
      ansible.builtin.uri:
        url: "https://{{ inventory_hostname }}/redfish/v1/Managers/iRMC"
        method: GET
        url_username: "{{ irmc_user }}"
        url_password: "{{ irmc_password }}"
        validate_certs: "{{ validate_certificate }}"
        headers:
          Accept: application/json
          Content type: application/json
        force_basic_auth: true
      register: response
      until: response.status == 200
      retries: "{{ retries }}"
      delay: "{{ delay }}"
